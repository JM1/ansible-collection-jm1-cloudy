---
# Copyright (c) 2020-2021 Jakob Meng, <jakobmeng@web.de>
# vim:set fileformat=unix tabstop=2 shiftwidth=2 expandtab:
# kate: end-of-line unix; space-indent on; indent-width 2; remove-trailing-spaces modified;

# Try to extract host's ip address from Netplan config because hostname might not be DNS resolvable.
ansible_host: "{{ libvirt_netplan['ethernets']['eth0']['addresses'][0] | ansible.utils.ipaddr('address')
                  if libvirt_netplan['ethernets']['eth0']['addresses'][0] | default(None) != None else inventory_hostname }}"

cloudinit_metadata: '{{ cloudinit_metadata_default }}'

cloudinit_networkconfig: |
  {{ cloudinit_networkconfig_default }}
  {{ libvirt_netplan | to_nice_yaml if libvirt_netplan else '' }}

cloudinit_userdata: '{{ cloudinit_userdata_default }}'

# TODO: Add support for Fedora
libvirt_backing_vol: |-
  {{
    {
      'CentOS_7': 'CentOS-7-x86_64-GenericCloud-2003.qcow2',
      'CentOS_8': 'CentOS-Stream-GenericCloud-8-latest.x86_64.qcow2',
      'CentOS_9': 'CentOS-Stream-GenericCloud-9-latest.x86_64.qcow2',
      'Debian_10': 'debian-10-genericcloud-amd64.qcow2',
      'Debian_11': 'debian-11-genericcloud-amd64.qcow2',
      'Debian_12': 'debian-12-genericcloud-amd64.qcow2',
      'Debian_13': 'debian-13-genericcloud-amd64.qcow2',
      'Fedora_40': 'Fedora-Cloud-Base-Generic.x86_64-40-1.14.qcow2',
      'Ubuntu_18_04': 'ubuntu-18.04-server-cloudimg-amd64.img',
      'Ubuntu_20_04': 'ubuntu-20.04-server-cloudimg-amd64.img',
      'Ubuntu_22_04': 'ubuntu-22.04-server-cloudimg-amd64.img',
      'Ubuntu_24_04': 'ubuntu-24.04-server-cloudimg-amd64.img'
    }[distribution_id | join('_') | regex_replace('[^A-Za-z0-9_]', '_')]
  }}

libvirt_backing_vol_format: 'qcow2'

libvirt_configdrive: '{{ fqdn }}_cidata.{{ libvirt_configdrive_format }}'

libvirt_configdrive_filesystem: 'iso'

libvirt_configdrive_format: 'qcow2'

libvirt_configdrive_pool: '{{ libvirt_pool }}'

libvirt_domain: '{{ fqdn }}'

libvirt_domain_autostart: true

# Possible domain states: [running, paused, pmsuspended, shutoff]
# Ref.: https://libvirt.org/html/libvirt-libvirt-domain.html#virDomainState
libvirt_domain_state: running

libvirt_hardware:
- cpu: 'host'
- vcpus: '2'
- memory: '1024'
- virt_type: 'kvm'
- graphics: 'vnc,listen=none'
- network: 'network=route-1-no-dhcp,model=virtio'
- disk: "vol='{{ libvirt_pool }}/{{ libvirt_volumes[0]['name'] }}',device=disk,bus=virtio,serial='root'"
- disk: "vol='{{ libvirt_pool }}/{{ libvirt_configdrive }}',device=disk,bus=virtio,serial='cidata'"
# Specifying os variant is HIGHLY RECOMMENDED, as it can greatly increase performance by specifying virtio
# among other guest tweaks. It also enables support for QEMU Guest Agent by adding a virtio-serial channel.
# Ref.: man virt-install
- os_variant: 'debian10'

libvirt_host_become: true

libvirt_netplan: {}

libvirt_uri: 'qemu:///system'

libvirt_volumes:
- backing_vol: '{{ libvirt_backing_vol | mandatory }}'
  backing_vol_format: 'qcow2'
  capacity: 5G
  format: 'qcow2'
  linked: false
  name: '{{ fqdn }}.qcow2'
  pool: '{{ libvirt_pool }}'
  prealloc_metadata: false
  state: present

libvirt_pool: 'default'
