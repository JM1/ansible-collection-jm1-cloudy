---
# Copyright (c) 2022 Jakob Meng, <jakobmeng@web.de>
# vim:set fileformat=unix tabstop=2 shiftwidth=2 expandtab:
# kate: end-of-line unix; space-indent on; indent-width 2; remove-trailing-spaces modified;

# ansible_host has to be explicitly defined here because Ansible controller cannot
# resolve the hostname as it is unknown outside of the isolated network
ansible_host: 192.168.153.22

# dhcpd_host_config cannot be a template because Ansible does not recursively evaluate variables.
# Ref.: https://github.com/ansible/ansible/issues/16351
dhcpd_host_config: |-
  hardware ethernet 52:54:00:aa:bb:0b;
  fixed-address 192.168.153.22;

distribution_id:
- 'CentOS'
- '9'

kickstart_config: |
  #version=RHEL9

  # Kickstart configuration
  # Ref.: https://docs.centos.org/en-US/centos/install-guide/Kickstart2/

  # Use graphical install
  graphical

  %packages
  @^minimal-environment
  @guest-agents
  kexec-tools
  python3

  %end

  # Keyboard layouts
  keyboard --xlayouts='de','us'
  # System language
  lang en_US.UTF-8 --addsupport=de_DE.UTF-8

  # Network information
  network  --hostname={{ fqdn }}

  # Use network installation (optional)
  url --url="http://192.168.153.2/archive/CentOS_9/amd64/os/"

  # Run the Setup Agent on first boot
  firstboot --enable

  autopart

  # Partition clearing information
  clearpart --none --initlabel

  # System timezone
  timezone Europe/Berlin --isUtc

  #Root password
  rootpw --lock

  user --groups=wheel --name={{ ansible_user }} --lock

  {% for key in ssh_authorized_keys | selectattr('user', 'equalto', ansible_user) | selectattr('state', 'equalto', 'present') | map(attribute='key') | list %}
  sshkey --username={{ ansible_user }} '{{ key }}'
  {% endfor %}

  %post
  echo '{{ ansible_user }} ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers.d/90-cloud-init-users
  chmod u=r,g=r,o= /etc/sudoers.d/90-cloud-init-users
  %end

  reboot

libvirt_configdrive: !!null # disable cloud-init config drive

libvirt_domain_autostart: no

libvirt_hardware:
- cpu: 'host-passthrough,cache.mode=passthrough'
- vcpus: '2'
- memory: '2048'
- virt_type: 'kvm'
- graphics: 'spice,listen=socket'
- network: 'network=isolated-2-no-dhcp,model=virtio,mac=52:54:00:aa:bb:0b'
- disk: "vol='{{ libvirt_pool }}/{{ libvirt_volumes[0]['name'] }}',device=disk,bus=virtio"
- boot: 'hd,network'
- os_variant: 'rhel8.0'

libvirt_host_become: no

libvirt_pool: 'default'

libvirt_uri: 'qemu:///session'

libvirt_volumes:
- capacity: 20G
  format: 'qcow2'
  name: '{{ fqdn }}.qcow2'
  pool: '{{ libvirt_pool }}'
  prealloc_metadata: no
  state: present

os_architecture: x86_64

pxe_installer_client_mac: 52:54:00:aa:bb:0b

# Inspired by Debian's OpenStack images
# Ref.: https://cdimage.debian.org/cdimage/openstack/
pxe_installer_kernel_parameters: >-
  console=tty0 console=ttyS0,115200 earlyprintk=ttyS0,115200 consoleblank=0 systemd.show_status=true
  http_proxy=http://192.168.153.2:8080/

# sudo configuration is done in kickstart_config
sudoers_config: []
