---
# Copyright (c) 2020-2021 Jakob Meng, <jakobmeng@web.de>
# vim:set fileformat=unix tabstop=2 shiftwidth=2 expandtab:
# kate: end-of-line unix; space-indent on; indent-width 2; remove-trailing-spaces modified;

ansible_connection: local

# For local connections use Python interpreter that is being used by Ansible on the controller.
#
# Rationale:
# For local connections Ansible will not necessarily use the same Python interpreter that is being used by Ansible
# on the controller. If Ansible on the controller is run from a virtual environment aka virtualenv, then Ansible
# will use interpreter discovery to choose a Python interpreter for local connections anyway. To reuse the Python
# interpreter from the controller, ansible_python_interpreter has to be set to ansible_playbook_python explicitly.
#
# Ref.:
#  https://github.com/ansible/ansible/issues/16724
#  https://willthames.github.io/2018/07/01/connection-local-vs-delegate_to-localhost.html
#  https://docs.ansible.com/ansible/latest/user_guide/playbooks_delegation.html
#  https://docs.ansible.com/ansible/latest/reference_appendices/interpreter_discovery.html
ansible_python_interpreter: "{{ ansible_playbook_python }}"

libvirt_host_become: no

# NOTE: All libvirt networks listed below are expected to created and managed by the system libvirt daemon. The networks
#       below are merely created to make the system-wide networks known to the user-session libvirt daemon. The real
#       networks are not necessarily forwarding bridges, e.g. isolated-* networks are isolated networks with NAT. But
#       to prevent the user-session libvirt daemon from trying to create those preexisting isolated networks (and
#       failing to do so due to insufficient permissions) we lie to the user-session libvirt daemon and pretend that
#       all networks are bridges. See e.g. host lvrt-lcl-system on how to set up the system-wide libvirt networks.
libvirt_networks:
- autostart: yes
  bridge:
    name: 'br-lan'
  name: 'lan-bridge'
  restart_on_change: yes
  state: active
  xml_var: 'libvirt_network_template_bridge'

- autostart: yes
  bridge:
    name: 'virbr-local-0'
  ignore:
  - '/network/uuid'
  name: 'isolated-0'
  restart_on_change: yes
  state: active
  xml_var: 'libvirt_network_template_bridge'

- autostart: yes
  bridge:
    name: 'virbr-local-1'
  ignore:
  - '/network/uuid'
  name: 'isolated-1'
  restart_on_change: yes
  state: active
  xml_var: 'libvirt_network_template_bridge'

- autostart: yes
  bridge:
    name: 'virbr-local-2'
  ignore:
  - '/network/uuid'
  name: 'isolated-2'
  restart_on_change: yes
  state: active
  xml_var: 'libvirt_network_template_bridge'

- autostart: yes
  bridge:
    name: 'virbr-local-3'
  ignore:
  - '/network/uuid'
  name: 'isolated-3'
  restart_on_change: yes
  state: active
  xml_var: 'libvirt_network_template_bridge'

- autostart: yes
  bridge:
    name: 'virbr-local-4'
  ignore:
  - '/network/uuid'
  name: 'isolated-4'
  restart_on_change: yes
  state: active
  xml_var: 'libvirt_network_template_bridge'

- autostart: yes
  bridge:
    name: 'virbr-local-5'
  ignore:
  - '/network/uuid'
  name: 'isolated-5'
  restart_on_change: yes
  state: active
  xml_var: 'libvirt_network_template_bridge'

- autostart: yes
  bridge:
    name: 'virbr-local-6'
  ignore:
  - '/network/uuid'
  name: 'isolated-6'
  restart_on_change: yes
  state: active
  xml_var: 'libvirt_network_template_bridge'

- autostart: yes
  bridge:
    name: 'virbr-local-7'
  ignore:
  - '/network/uuid'
  name: 'isolated-7'
  restart_on_change: yes
  state: active
  xml_var: 'libvirt_network_template_bridge'

- autostart: yes
  bridge:
    name: 'virbr-local-8'
  ignore:
  - '/network/uuid'
  name: 'isolated-8'
  restart_on_change: yes
  state: active
  xml_var: 'libvirt_network_template_bridge'

libvirt_pools:
- autostart: yes
  hardware:
  - type: dir
  - target: '{{ ansible_env.HOME }}/.local/share/libvirt/images'
  name: 'default'

libvirt_uri: 'qemu:///session'
