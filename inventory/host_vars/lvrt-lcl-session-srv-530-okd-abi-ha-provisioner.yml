---
# Copyright (c) 2023 Jakob Meng, <jakobmeng@web.de>
# vim:set fileformat=unix tabstop=2 shiftwidth=2 expandtab:
# kate: end-of-line unix; space-indent on; indent-width 2; remove-trailing-spaces modified;

ansible_host: 192.168.158.48

# Debian 12 (Bookworm) and Ubuntu 22.04 LTS (Jammy Jellyfish) do not provide packages for nmstate
distribution_id:
- 'CentOS'
- '9'

httpd_config:
- ansible.builtin.copy:
    content: |
      # 2023 Jakob Meng, <jakobmeng@web.de>
      # Do not provide a Welcome page.
      # This file overrides the default one provided by the httpd package.
      # When this file is removed it will be restored on upgrades.
    dest: /etc/httpd/conf.d/welcome.conf
    mode: u=rw,g=r,o=r
    group: root
    owner: root
- ansible.builtin.copy:
    content: |
      # 2023 Jakob Meng, <jakobmeng@web.de>
      <Directory /var/www>
        Options -Indexes
        Require ip 192.168.158.47
        Require ip 127.
        Require ip ::1
      </Directory>

      <Directory /var/www/html>
        Options -Indexes
        Require ip 192.168.158.47
        Require ip 127.
        Require ip ::1
      </Directory>
    dest: /etc/httpd/conf.d/okd-abi-ha.conf
    mode: u=rw,g=r,o=r
    group: root
    owner: root

kubernetes_resources_config:
- # Configure OpenShift's image registry which is removed during installation
  # Ref.: https://docs.openshift.com/container-platform/4.13/registry/configuring-registry-operator.html
  become: false
  kubernetes.core.k8s:
    api_version: imageregistry.operator.openshift.io/v1
    definition:
      spec:
        managementState: Managed
        # NOTE: Option emptyDir is for non-production clusters only
        # Ref.:
        # https://docs.openshift.com/container-platform/4.13/registry/configuring_registry_storage/configuring-registry-storage-vsphere.html
        # https://kubernetes.io/docs/concepts/storage/volumes/
        storage:
          emptyDir: {}
    kind: Config
    kubeconfig: '/home/{{ ansible_user }}/clusterconfigs/auth/kubeconfig'
    name: cluster
    state: patched
    wait: true

libvirt_domain_autostart: false

libvirt_hardware:
- cpu: 'host-passthrough,cache.mode=passthrough'
- vcpus: '2'
- memory: '8192' # OpenShift's conformance test suite requires 8GB RAM
- virt_type: 'kvm'
- graphics: 'vnc,listen=socket'
- network: 'network=route-1-no-dhcp,model=virtio,mac=52:54:00:aa:bb:19'
- disk: "vol='{{ libvirt_pool }}/{{ libvirt_volumes[0]['name'] }}',device=disk,bus=virtio"
- disk: "vol='{{ libvirt_pool }}/{{ libvirt_configdrive }}',device=disk,bus=virtio,serial='cidata'"
- os_variant: 'ubuntu18.04'

libvirt_host_become: false

libvirt_netplan:
  ethernets:
    eth0:
      dhcp4: false
      dhcp6: false
      accept-ra: false

      addresses:
      - 192.168.158.48/24

      nameservers:
        search: [okd-abi-ha.home.arpa, home.arpa]
        addresses:
        - 192.168.158.46
      routes:
      - to: 0.0.0.0/0
        via: 192.168.158.1

libvirt_pool: 'default'

libvirt_uri: 'qemu:///session'

libvirt_volumes:
- backing_vol: 'CentOS-Stream-GenericCloud-9-20230821.0.x86_64.qcow2'
  backing_vol_format: 'qcow2'
  capacity: 64G
  format: 'qcow2'
  linked: false
  name: '{{ fqdn }}.qcow2'
  pool: '{{ libvirt_pool }}'
  prealloc_metadata: false
  state: present

openshift_client_checksum: 'sha256:59cfdc9161c4d86ad1d0fe8789ae4c28aba64f2bbdf1cf748747694b54ff005b'

openshift_client_url: 'https://mirror.openshift.com/pub/openshift-v4/clients/ocp/4.13.7/openshift-client-linux-4.13.7.tar.gz'

openshift_abi_boot_code:
- become: true
  ansible.builtin.copy:
    src: '{{ openshift_abi_config_dir }}/agent.x86_64.iso'
    remote_src: true
    dest: '/var/www/html/agent.x86_64.iso'
    mode: u=rw,g=r,o=r
    group: root
    owner: root
#
- # Insert agent image as virtual media for cp0
  community.general.redfish_command:
    baseuri: '192.168.158.47'
    category: Manager
    command: VirtualMediaInsert
    password: 'empty'
    resource_id: 'deadbeef-1337-1337-1337-000000000001'
    username: 'admin'
    virtual_media:
      image_url: 'http://192.168.158.48/agent.x86_64.iso'
- # Insert agent image as virtual media for cp1
  community.general.redfish_command:
    baseuri: '192.168.158.47'
    category: Manager
    command: VirtualMediaInsert
    password: 'empty'
    resource_id: 'deadbeef-1337-1337-1337-000000000002'
    username: 'admin'
    virtual_media:
      image_url: 'http://192.168.158.48/agent.x86_64.iso'
- # Insert agent image as virtual media for cp2
  community.general.redfish_command:
    baseuri: '192.168.158.47'
    category: Manager
    command: VirtualMediaInsert
    password: 'empty'
    resource_id: 'deadbeef-1337-1337-1337-000000000003'
    username: 'admin'
    virtual_media:
      image_url: 'http://192.168.158.48/agent.x86_64.iso'
- # Insert agent image as virtual media for w0
  community.general.redfish_command:
    baseuri: '192.168.158.47'
    category: Manager
    command: VirtualMediaInsert
    password: 'empty'
    resource_id: 'deadbeef-1337-1337-1337-000000000004'
    username: 'admin'
    virtual_media:
      image_url: 'http://192.168.158.48/agent.x86_64.iso'
- # Insert agent image as virtual media for w1
  community.general.redfish_command:
    baseuri: '192.168.158.47'
    category: Manager
    command: VirtualMediaInsert
    password: 'empty'
    resource_id: 'deadbeef-1337-1337-1337-000000000005'
    username: 'admin'
    virtual_media:
      image_url: 'http://192.168.158.48/agent.x86_64.iso'
#
- # Boot server cp0
  community.general.redfish_command:
    baseuri: '192.168.158.47'
    category: Systems
    command: PowerOn
    password: 'empty'
    resource_id: 'deadbeef-1337-1337-1337-000000000001'
    username: 'admin'
- # Boot server cp1
  community.general.redfish_command:
    baseuri: '192.168.158.47'
    category: Systems
    command: PowerOn
    password: 'empty'
    resource_id: 'deadbeef-1337-1337-1337-000000000002'
    username: 'admin'
- # Boot server cp2
  community.general.redfish_command:
    baseuri: '192.168.158.47'
    category: Systems
    command: PowerOn
    password: 'empty'
    resource_id: 'deadbeef-1337-1337-1337-000000000003'
    username: 'admin'
- # Boot server w0
  community.general.redfish_command:
    baseuri: '192.168.158.47'
    category: Systems
    command: PowerOn
    password: 'empty'
    resource_id: 'deadbeef-1337-1337-1337-000000000004'
    username: 'admin'
- # Boot server w1
  community.general.redfish_command:
    baseuri: '192.168.158.47'
    category: Systems
    command: PowerOn
    password: 'empty'
    resource_id: 'deadbeef-1337-1337-1337-000000000005'
    username: 'admin'

openshift_abi_cleanup_code:
- # Eject agent image from cp0
  community.general.redfish_command:
    baseuri: '192.168.158.47'
    category: Manager
    command: VirtualMediaEject
    password: 'empty'
    resource_id: 'deadbeef-1337-1337-1337-000000000001'
    username: 'admin'
    virtual_media:
      image_url: 'http://192.168.158.48/agent.x86_64.iso'
- # Eject agent image from cp1
  community.general.redfish_command:
    baseuri: '192.168.158.47'
    category: Manager
    command: VirtualMediaEject
    password: 'empty'
    resource_id: 'deadbeef-1337-1337-1337-000000000002'
    username: 'admin'
    virtual_media:
      image_url: 'http://192.168.158.48/agent.x86_64.iso'
- # Eject agent image from cp2
  community.general.redfish_command:
    baseuri: '192.168.158.47'
    category: Manager
    command: VirtualMediaEject
    password: 'empty'
    resource_id: 'deadbeef-1337-1337-1337-000000000003'
    username: 'admin'
    virtual_media:
      image_url: 'http://192.168.158.48/agent.x86_64.iso'
- # Eject agent image from w0
  community.general.redfish_command:
    baseuri: '192.168.158.47'
    category: Manager
    command: VirtualMediaEject
    password: 'empty'
    resource_id: 'deadbeef-1337-1337-1337-000000000004'
    username: 'admin'
    virtual_media:
      image_url: 'http://192.168.158.48/agent.x86_64.iso'
- # Eject agent image from w1
  community.general.redfish_command:
    baseuri: '192.168.158.47'
    category: Manager
    command: VirtualMediaEject
    password: 'empty'
    resource_id: 'deadbeef-1337-1337-1337-000000000005'
    username: 'admin'
    virtual_media:
      image_url: 'http://192.168.158.48/agent.x86_64.iso'

openshift_abi_config:
- #  Create agent-config.yaml for openshift-install
  ansible.builtin.copy:
    content: |
      apiVersion: v1alpha1
      kind: AgentConfig
      metadata:
        name: okd-abi-ha
      rendezvousIP: 192.168.158.49
      hosts:
        - hostname: cp0
          role: master
          interfaces:
            - name: enp1s0
              macAddress: 52:54:00:aa:bb:14
          rootDeviceHints:
             deviceName: "/dev/vda"
        - hostname: cp1
          role: master
          interfaces:
            - name: enp1s0
              macAddress: 52:54:00:aa:bb:15
          rootDeviceHints:
             deviceName: "/dev/vda"
        - hostname: cp2
          role: master
          interfaces:
            - name: enp1s0
              macAddress: 52:54:00:aa:bb:16
          rootDeviceHints:
             deviceName: "/dev/vda"
        - hostname: w0
          role: worker
          interfaces:
            - name: enp1s0
              macAddress: 52:54:00:aa:bb:17
          rootDeviceHints:
             deviceName: "/dev/vda"
        - hostname: w1
          role: worker
          interfaces:
            - name: enp1s0
              macAddress: 52:54:00:aa:bb:18
          rootDeviceHints:
             deviceName: "/dev/vda"
    dest: '{{ openshift_abi_config_dir }}/agent-config.yaml'
    group: '{{ ansible_user }}'
    mode: u=rw,g=r,o=
    owner: '{{ ansible_user }}'
- # Create install-config.yaml for openshift-install
  ansible.builtin.copy:
    content: |
      apiVersion: v1
      baseDomain: home.arpa
      metadata:
        name: okd-abi-ha
      networking:
        machineNetwork:
        - cidr: 192.168.158.0/24
        networkType: OVNKubernetes
      compute:
      - name: worker
        replicas: 2
      controlPlane:
        name: master
        replicas: 3
      platform:
        baremetal:
          apiVIPs:
            - 192.168.158.55
          ingressVIPs:
            - 192.168.158.56
      pullSecret: '{{ openshift_abi_pullsecret | default(openshift_abi_pullsecret_default | from_json) | to_json }}'
      sshKey: '{{ ssh_authorized_keys
                  | selectattr('user', 'equalto', ansible_user)
                  | selectattr('state', 'equalto', 'present')
                  | map(attribute='key')
                  | list | join('\n') }}'
    dest: '{{ openshift_abi_config_dir }}/install-config.yaml'
    group: '{{ ansible_user }}'
    mode: u=rw,g=r,o=
    owner: '{{ ansible_user }}'

# force absolute path for openshift_abi_config_dir in order to use it in openshift_abi_boot_code
openshift_abi_config_dir: '/home/{{ ansible_user }}/clusterconfigs'

# For OCP/OKD 4.13 command 'openshift-install agent create image' expects 'auths'
# to have at least one entry and 'auth' to be a valid base64-encoded string.
# For OCP/OKD 4.13 create-cluster-and-infraenv.service expects 'auth' to be a valid
# 'user:password' base64-encoded string.
openshift_abi_pullsecret_default: '{"auths":{"xxxxxxx": {"auth": "YWRtaW46c2VjcmV0Cg=="}}}'

openshift_abi_release_image: 'quay.io/okd/scos-release:4.13.0-0.okd-scos-2023-07-20-165025'

openshift_tests_kubeconfig_file: '{{ openshift_abi_config_dir }}/auth/kubeconfig'

openshift_tests_pullsecret: '{{ openshift_abi_pullsecret | default(None) }}'

openshift_tests_release_image: '{{ openshift_abi_release_image }}'

packages:
- name:
  # Python modules jsonpatch, kubernetes and PyYAML are required by Ansible collection kubernetes.core
  # Ref.: https://github.com/ansible-collections/kubernetes.core/blob/main/requirements.txt
  - python3-jsonpatch
  - python3-kubernetes
  - python3-yaml
  # Agent-based Installer requires nmstate when agent-config.yaml has any host that defines the networkConfig entry.
  # Ref.: https://docs.openshift.com/container-platform/4.13/installing/installing_with_agent_based_installer/preparing-to-install-with-agent-based-installer.html
  - nmstate
  state: present

# NOTE: Keep in sync with variable sshd_config_centos from group_vars/all.yml
sshd_config:
- ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regex: '^#*PasswordAuthentication .*'
    line: 'PasswordAuthentication no'
- ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regex: '^#*PermitRootLogin .*'
    line: 'PermitRootLogin no'
- # Prevent slow SSH logins
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config.d/50-redhat.conf
    regex: '^#*GSSAPIAuthentication .*'
    line: 'GSSAPIAuthentication no'
