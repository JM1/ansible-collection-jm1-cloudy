---
# Copyright (c) 2023 Jakob Meng, <jakobmeng@web.de>
# vim:set fileformat=unix tabstop=2 shiftwidth=2 expandtab:
# kate: end-of-line unix; space-indent on; indent-width 2; remove-trailing-spaces modified;

distribution_id:
- 'Debian'
- '11'

libvirt_domain_autostart: false

libvirt_hardware:
- cpu: 'host'
- vcpus: '2'
- memory: '1024'
- virt_type: 'kvm'
- graphics: 'vnc,listen=socket'
- network: 'network=route-1-no-dhcp,model=virtio'
- network: 'network=isolated-2-no-dhcp,model=virtio'
- disk: "vol='{{ libvirt_pool }}/{{ libvirt_volumes[0]['name'] }}',device=disk,bus=virtio"
- disk: "vol='{{ libvirt_pool }}/{{ libvirt_configdrive }}',device=disk,bus=virtio,serial='cidata'"
- os_variant: 'ubuntu18.04'

libvirt_host_become: false

libvirt_netplan:
  ethernets:
    eth0:
      dhcp4: false
      dhcp6: false
      accept-ra: false

      addresses:
      - 192.168.158.67/24

      nameservers:
        addresses:
        - 192.168.158.1
      routes:
      - to: 0.0.0.0/0
        via: 192.168.158.1
    eth1:
      dhcp4: false
      dhcp6: false
      accept-ra: false

      addresses:
      - 192.168.153.67/24

libvirt_pool: 'default'

libvirt_uri: 'qemu:///session'

libvirt_volumes:
- backing_vol: 'debian-11-genericcloud-amd64.qcow2'
  backing_vol_format: 'qcow2'
  capacity: 20G
  format: 'qcow2'
  linked: false
  name: '{{ fqdn }}.qcow2'
  pool: '{{ libvirt_pool }}'
  prealloc_metadata: false
  state: present

podman_config:
- # Create systemd service unit for running virtualbmc in a Podman container
  become: true
  ansible.builtin.copy:
    content: |
      [Unit]
      Description=VirtualBMC in a Podman container
      Wants=network.target
      After=network-online.target

      [Service]
      Environment=PODMAN_SYSTEMD_UNIT=%n
      Restart=on-failure
      TimeoutStartSec=600
      TimeoutStopSec=120
      ExecStartPre=/bin/rm -f %t/podman-virtualbmc.pid %t/podman-virtualbmc.ctr-id
      ExecStart=/usr/bin/podman run \
        --conmon-pidfile %t/podman-virtualbmc.pid \
        --cidfile %t/podman-virtualbmc.ctr-id \
        --cgroups=no-conmon \
        --replace \
        --detach --tty \
        --publish 192.168.158.67:623:623/udp \
        --publish 192.168.158.67:624:624/udp \
        --publish 192.168.158.67:625:625/udp \
        --publish 192.168.158.67:626:626/udp \
        --publish 192.168.158.67:627:627/udp \
        --name virtualbmc \
        quay.io/metal3-io/vbmc
      ExecStartPost=/usr/bin/podman exec virtualbmc \
        vbmc add --port 623 --libvirt-uri 'qemu+tcp://192.168.153.1:16509/session' \
          lvrt-lcl-session-srv-610-okd-ipi-cp0.home.arpa
      ExecStartPost=/usr/bin/podman exec virtualbmc \
        vbmc add --port 624 --libvirt-uri 'qemu+tcp://192.168.153.1:16509/session' \
          lvrt-lcl-session-srv-611-okd-ipi-cp1.home.arpa
      ExecStartPost=/usr/bin/podman exec virtualbmc \
        vbmc add --port 625 --libvirt-uri 'qemu+tcp://192.168.153.1:16509/session' \
          lvrt-lcl-session-srv-612-okd-ipi-cp2.home.arpa
      ExecStartPost=/usr/bin/podman exec virtualbmc \
        vbmc add --port 626 --libvirt-uri 'qemu+tcp://192.168.153.1:16509/session' \
          lvrt-lcl-session-srv-620-okd-ipi-w0.home.arpa
      ExecStartPost=/usr/bin/podman exec virtualbmc \
        vbmc add --port 627 --libvirt-uri 'qemu+tcp://192.168.153.1:16509/session' \
          lvrt-lcl-session-srv-621-okd-ipi-w1.home.arpa
      ExecStartPost=/usr/bin/podman exec virtualbmc vbmc start lvrt-lcl-session-srv-610-okd-ipi-cp0.home.arpa
      ExecStartPost=/usr/bin/podman exec virtualbmc vbmc start lvrt-lcl-session-srv-611-okd-ipi-cp1.home.arpa
      ExecStartPost=/usr/bin/podman exec virtualbmc vbmc start lvrt-lcl-session-srv-612-okd-ipi-cp2.home.arpa
      ExecStartPost=/usr/bin/podman exec virtualbmc vbmc start lvrt-lcl-session-srv-620-okd-ipi-w0.home.arpa
      ExecStartPost=/usr/bin/podman exec virtualbmc vbmc start lvrt-lcl-session-srv-621-okd-ipi-w1.home.arpa
      ExecStop=/usr/bin/podman stop --ignore --cidfile %t/podman-virtualbmc.ctr-id -t 10
      ExecStopPost=/usr/bin/podman rm --ignore -f --cidfile %t/podman-virtualbmc.ctr-id
      PIDFile=%t/podman-virtualbmc.pid
      Type=forking

      [Install]
      WantedBy=multi-user.target default.target
    dest: /etc/systemd/system/podman-virtualbmc.service
  handlers:
  - # On changes reload systemd daemon and restart Podman container of virtualbmc
    become: true
    ansible.builtin.service:
      daemon_reload: true
      name: podman-virtualbmc.service
      state: restarted
- # Ensure systemd service of virtualbmc is enabled
  become: true
  ansible.builtin.service:
    enabled: true
    name: podman-virtualbmc.service
- # Force changes to be applied now
  ansible.builtin.meta: flush_handlers
