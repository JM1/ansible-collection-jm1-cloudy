---
# Copyright (c) 2023 Jakob Meng, <jakobmeng@web.de>
# vim:set fileformat=unix tabstop=2 shiftwidth=2 expandtab:
# kate: end-of-line unix; space-indent on; indent-width 2; remove-trailing-spaces modified;

ansible_host: 192.168.158.76

distribution_id:
- 'CentOS'
- '9'

httpd_config:
- ansible.builtin.copy:
    content: |
      # 2023 Jakob Meng, <jakobmeng@web.de>
      # Do not provide a Welcome page.
      # This file overrides the default one provided by the httpd package.
      # When this file is removed it will be restored on upgrades.
    dest: /etc/httpd/conf.d/welcome.conf
    mode: u=rw,g=r,o=r
    group: root
    owner: root
- ansible.builtin.copy:
    content: |
      # 2023 Jakob Meng, <jakobmeng@web.de>
      <Directory /var/www>
        Options -Indexes
        Require ip 192.168.158.75
        Require ip 127.
        Require ip ::1
      </Directory>

      <Directory /var/www/html>
        Options -Indexes
        Require ip 192.168.158.75
        Require ip 127.
        Require ip ::1
      </Directory>
    dest: /etc/httpd/conf.d/okd-sno.conf
    mode: u=rw,g=r,o=r
    group: root
    owner: root

kubernetes_resources_config:
- # Configure OpenShift's image registry which is removed during installation
  # Ref.: https://docs.openshift.com/container-platform/4.13/registry/configuring-registry-operator.html
  become: false
  kubernetes.core.k8s:
    api_version: imageregistry.operator.openshift.io/v1
    definition:
      spec:
        managementState: Managed
        # NOTE: Option emptyDir is for non-production clusters only
        # Ref.:
        # https://docs.openshift.com/container-platform/4.13/registry/configuring_registry_storage/configuring-registry-storage-vsphere.html
        # https://kubernetes.io/docs/concepts/storage/volumes/
        storage:
          emptyDir: {}
    kind: Config
    kubeconfig: '/home/{{ ansible_user }}/clusterconfigs/auth/kubeconfig'
    name: cluster
    state: patched
    wait: true
- # Change chrony's NTP pool at master nodes to NTP server running at the local router (optional)
  become: false
  kubernetes.core.k8s:
    definition:
      apiVersion: machineconfiguration.openshift.io/v1
      kind: MachineConfig
      metadata:
        labels:
          machineconfiguration.openshift.io/role: master
        name: update-chrony-conf-master
      spec:
        config:
          ignition:
            version: 3.2.0
          storage:
            files:
              - path: /usr/local/bin/update-chrony-conf.sh
                mode: 0755
                overwrite: true
                contents:
                  source: data:text/plain;charset=utf-8;base64,IyEvYmluL2Jhc2gKIyAyMDIzIEpha29iIE1lbmcsIDxqYWtvYm1lbmdAd2ViLmRlPgpncmVwIC1xIC1lICdec2VydmVyIDE5MlwuMTY4XC4xNThcLjc0IGlidXJzdCQnIC9ldGMvY2hyb255LmNvbmYgXAogIHx8IHNlZCAtaSAtZSAncy9ecG9vbCAuKiQvc2VydmVyIDE5Mi4xNjguMTU4Ljc0IGlidXJzdC9nJyAvZXRjL2Nocm9ueS5jb25mCg==
                  # Until MCO does not support Butane's inline attribute, contents has to be given as a base64-encoded
                  # string using attribute source.
                  # Ref.: https://github.com/openshift/machine-config-operator/issues/283
                  #inline: |
                  #  #!/bin/bash
                  #  # 2023 Jakob Meng, <jakobmeng@web.de>
                  #  grep -q -e '^server 192\.168\.158\.74 iburst$' /etc/chrony.conf \
                  #    || sed -i -e 's/^pool .*$/server 192.168.158.74 iburst/g' /etc/chrony.conf
          systemd:
            units:
              - name: update-chrony-conf.service
                enabled: true
                contents: |
                  # 2023 Jakob Meng, <jakobmeng@web.de>
                  [Unit]
                  Before=chronyd.service
                  Wants=local-fs.target
                  After=local-fs.target

                  [Service]
                  Type=oneshot
                  ExecStart=/usr/local/bin/update-chrony-conf.sh
                  RemainAfterExit=yes

                  [Install]
                  WantedBy=multi-user.target
    kubeconfig: '/home/{{ ansible_user }}/clusterconfigs/auth/kubeconfig'
    state: present
    wait: true
- # Change chrony's NTP pool at worker nodes to NTP server running at the local router (optional)
  become: false
  kubernetes.core.k8s:
    definition:
      apiVersion: machineconfiguration.openshift.io/v1
      kind: MachineConfig
      metadata:
        labels:
          machineconfiguration.openshift.io/role: worker
        name: update-chrony-conf-worker
      spec:
        config:
          ignition:
            version: 3.2.0
          storage:
            files:
              - path: /usr/local/bin/update-chrony-conf.sh
                mode: 0755
                overwrite: true
                contents:
                  source: data:text/plain;charset=utf-8;base64,IyEvYmluL2Jhc2gKIyAyMDIzIEpha29iIE1lbmcsIDxqYWtvYm1lbmdAd2ViLmRlPgpncmVwIC1xIC1lICdec2VydmVyIDE5MlwuMTY4XC4xNThcLjc0IGlidXJzdCQnIC9ldGMvY2hyb255LmNvbmYgXAogIHx8IHNlZCAtaSAtZSAncy9ecG9vbCAuKiQvc2VydmVyIDE5Mi4xNjguMTU4Ljc0IGlidXJzdC9nJyAvZXRjL2Nocm9ueS5jb25mCg==
                  # Until MCO does not support Butane's inline attribute, contents has to be given as a base64-encoded
                  # string using attribute source.
                  # Ref.: https://github.com/openshift/machine-config-operator/issues/283
                  #inline: |
                  #  #!/bin/bash
                  #  # 2023 Jakob Meng, <jakobmeng@web.de>
                  #  grep -q -e '^server 192\.168\.158\.74 iburst$' /etc/chrony.conf \
                  #    || sed -i -e 's/^pool .*$/server 192.168.158.74 iburst/g' /etc/chrony.conf
          systemd:
            units:
              - name: update-chrony-conf.service
                enabled: true
                contents: |
                  # 2023 Jakob Meng, <jakobmeng@web.de>
                  [Unit]
                  Before=chronyd.service
                  Wants=local-fs.target
                  After=local-fs.target

                  [Service]
                  Type=oneshot
                  ExecStart=/usr/local/bin/update-chrony-conf.sh
                  RemainAfterExit=yes

                  [Install]
                  WantedBy=multi-user.target
    kubeconfig: '/home/{{ ansible_user }}/clusterconfigs/auth/kubeconfig'
    state: present
    wait: true

libvirt_domain_autostart: false

libvirt_hardware:
- cpu: 'host-passthrough,cache.mode=passthrough'
- vcpus: '2'
- memory: '8192' # OpenShift's conformance test suite requires 8GB RAM
- virt_type: 'kvm'
- graphics: 'vnc,listen=socket'
- network: 'network=route-1-no-dhcp,model=virtio,mac=52:54:00:aa:bb:28'
- disk: "vol='{{ libvirt_pool }}/{{ libvirt_volumes[0]['name'] }}',device=disk,bus=virtio"
- disk: "vol='{{ libvirt_pool }}/{{ libvirt_configdrive }}',device=disk,bus=virtio,serial='cidata'"
- os_variant: 'ubuntu18.04'

libvirt_host_become: false

libvirt_netplan:
  ethernets:
    eth0:
      dhcp4: false
      dhcp6: false
      accept-ra: false

      addresses:
      - 192.168.158.76/24

      nameservers:
        search: [okd-sno.home.arpa, home.arpa]
        addresses:
        - 192.168.158.74
      routes:
      - to: 0.0.0.0/0
        via: 192.168.158.1

libvirt_pool: 'default'

libvirt_uri: 'qemu:///session'

libvirt_volumes:
- backing_vol: 'CentOS-Stream-GenericCloud-9-latest.x86_64.qcow2'
  backing_vol_format: 'qcow2'
  capacity: 64G
  format: 'qcow2'
  linked: false
  name: '{{ fqdn }}.qcow2'
  pool: '{{ libvirt_pool }}'
  prealloc_metadata: false
  state: present

openshift_client_checksum: 'sha256:59cfdc9161c4d86ad1d0fe8789ae4c28aba64f2bbdf1cf748747694b54ff005b'

openshift_client_url: 'https://mirror.openshift.com/pub/openshift-v4/clients/ocp/4.13.7/openshift-client-linux-4.13.7.tar.gz'

openshift_sno_boot_code:
- become: true
  ansible.builtin.copy:
    src: '{{ openshift_sno_config_dir }}/coreos-live-sno-installer.iso'
    remote_src: true
    dest: '/var/www/html/coreos-live-sno-installer.iso'
    mode: u=rw,g=r,o=r
    group: root
    owner: root
#
- # Insert agent image as virtual media for cp0
  community.general.redfish_command:
    baseuri: '192.168.158.75'
    category: Manager
    command: VirtualMediaInsert
    password: 'empty'
    resource_id: 'deadbeef-1337-1337-1337-000000000001'
    username: 'admin'
    virtual_media:
      image_url: 'http://192.168.158.76/coreos-live-sno-installer.iso'
#
- # Boot server cp0
  community.general.redfish_command:
    baseuri: '192.168.158.75'
    category: Systems
    command: PowerOn
    password: 'empty'
    resource_id: 'deadbeef-1337-1337-1337-000000000001'
    username: 'admin'

openshift_sno_cleanup_code:
- # Eject agent image from cp0
  community.general.redfish_command:
    baseuri: '192.168.158.75'
    category: Manager
    command: VirtualMediaEject
    password: 'empty'
    resource_id: 'deadbeef-1337-1337-1337-000000000001'
    username: 'admin'
    virtual_media:
      image_url: 'http://192.168.158.76/coreos-live-sno-installer.iso'

openshift_sno_config:
- # Create install-config.yaml for openshift-install
  ansible.builtin.copy:
    content: |
      apiVersion: v1
      baseDomain: home.arpa
      metadata:
        name: okd-sno
      networking:
        machineNetwork:
        - cidr: 192.168.158.0/24
        networkType: OVNKubernetes
      compute:
      - name: worker
        replicas: 0
      controlPlane:
        name: master
        replicas: 1
      platform:
        none: {}
      bootstrapInPlace:
        installationDisk: "/dev/vda"
      pullSecret: '{{ openshift_sno_pullsecret | default(openshift_sno_pullsecret_default | from_json) | to_json }}'
      sshKey: '{{ ssh_authorized_keys
                  | selectattr('user', 'equalto', ansible_user)
                  | selectattr('state', 'equalto', 'present')
                  | map(attribute='key')
                  | list | join('\n') }}'
    dest: '{{ openshift_sno_config_dir }}/install-config.yaml'
    group: '{{ ansible_user }}'
    mode: u=rw,g=r,o=
    owner: '{{ ansible_user }}'

# force absolute path for openshift_sno_config_dir in order to use it in openshift_sno_boot_code
openshift_sno_config_dir: '/home/{{ ansible_user }}/clusterconfigs'

# Single-Node OpenShift setup expects 'auths' to have at least one entry and 'auth' to be a valid base64-encoded string.
openshift_sno_pullsecret_default: '{"auths":{"xxxxxxx": {"auth": "YWRtaW46c2VjcmV0Cg=="}}}'

openshift_sno_release_image: 'quay.io/openshift/okd:4.13.0-0.okd-2023-08-18-135805'

openshift_tests_kubeconfig_file: '{{ openshift_sno_config_dir }}/auth/kubeconfig'

openshift_tests_pullsecret: '{{ openshift_sno_pullsecret | default(None) }}'

openshift_tests_release_image: '{{ openshift_sno_release_image }}'

packages:
- name:
  # Python modules jsonpatch, kubernetes and PyYAML are required by Ansible collection kubernetes.core
  # Ref.: https://github.com/ansible-collections/kubernetes.core/blob/main/requirements.txt
  - python3-jsonpatch
  - python3-kubernetes
  - python3-yaml
  state: present

# NOTE: Keep in sync with variable sshd_config_centos from group_vars/all.yml
sshd_config:
- ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regex: '^#*PasswordAuthentication .*'
    line: 'PasswordAuthentication no'
- ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regex: '^#*PermitRootLogin .*'
    line: 'PermitRootLogin no'
- # Prevent slow SSH logins
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config.d/50-redhat.conf
    regex: '^#*GSSAPIAuthentication .*'
    line: 'GSSAPIAuthentication no'
