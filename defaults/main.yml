---
# Copyright (c) 2021 Jakob Meng, <jakobmeng@web.de>
# vim:set fileformat=unix tabstop=2 shiftwidth=2 expandtab:
# kate: end-of-line unix; space-indent on; indent-width 2; remove-trailing-spaces modified;

dhcpd_config: |
  {{
    {
      'CentOS_7': dhcpd_config_centos_7,
      'CentOS_8': dhcpd_config_centos_8,
      'Debian_10': dhcpd_config_debian_10,
      'Debian_11': dhcpd_config_debian_11,
      'Red_Hat_Enterprise_Linux_7': dhcpd_config_red_hat_enterprise_linux_7,
      'Red_Hat_Enterprise_Linux_8': dhcpd_config_red_hat_enterprise_linux_8,
      'Ubuntu_18_04': dhcpd_config_ubuntu_18_04,
      'Ubuntu_20_04': dhcpd_config_ubuntu_20_04
    }[distribution_id|join('_')|regex_replace('[^A-Za-z0-9 _-]', '_')]
  }}

dhcpd6_config: |
  {{
    {
      'CentOS_7': dhcpd6_config_centos_7,
      'CentOS_8': dhcpd6_config_centos_8,
      'Debian_10': dhcpd6_config_debian_10,
      'Debian_11': dhcpd6_config_debian_11,
      'Red_Hat_Enterprise_Linux_7': dhcpd6_config_red_hat_enterprise_linux_7,
      'Red_Hat_Enterprise_Linux_8': dhcpd6_config_red_hat_enterprise_linux_8,
      'Ubuntu_18_04': dhcpd6_config_ubuntu_18_04,
      'Ubuntu_20_04': dhcpd6_config_ubuntu_20_04
    }[distribution_id|join('_')|regex_replace('[^A-Za-z0-9 _-]', '_')]
  }}

dhcpd_config_centos_7: |
  #
  # DHCP Server Configuration file.
  #   see /usr/share/doc/dhcp*/dhcpd.conf.example
  #   see dhcpd.conf(5) man page
  #

dhcpd_config_centos_8: |
  #
  # DHCP Server Configuration file.
  #   see /usr/share/doc/dhcp-server/dhcpd.conf.example
  #   see dhcpd.conf(5) man page
  #

dhcpd_config_debian_10: |
  # dhcpd.conf
  #
  # Sample configuration file for ISC dhcpd
  #

  # option definitions common to all supported networks...
  option domain-name "example.org";
  option domain-name-servers ns1.example.org, ns2.example.org;

  default-lease-time 600;
  max-lease-time 7200;

  # The ddns-updates-style parameter controls whether or not the server will
  # attempt to do a DNS update when a lease is confirmed. We default to the
  # behavior of the version 2 packages ('none', since DHCP v2 didn't
  # have support for DDNS.)
  ddns-update-style none;

  # If this DHCP server is the official DHCP server for the local
  # network, the authoritative directive should be uncommented.
  #authoritative;

  # Use this to send dhcp log messages to a different log file (you also
  # have to hack syslog.conf to complete the redirection).
  #log-facility local7;

  # No service will be given on this subnet, but declaring it helps the
  # DHCP server to understand the network topology.

  #subnet 10.152.187.0 netmask 255.255.255.0 {
  #}

  # This is a very basic subnet declaration.

  #subnet 10.254.239.0 netmask 255.255.255.224 {
  #  range 10.254.239.10 10.254.239.20;
  #  option routers rtr-239-0-1.example.org, rtr-239-0-2.example.org;
  #}

  # This declaration allows BOOTP clients to get dynamic addresses,
  # which we don't really recommend.

  #subnet 10.254.239.32 netmask 255.255.255.224 {
  #  range dynamic-bootp 10.254.239.40 10.254.239.60;
  #  option broadcast-address 10.254.239.31;
  #  option routers rtr-239-32-1.example.org;
  #}

  # A slightly different configuration for an internal subnet.
  #subnet 10.5.5.0 netmask 255.255.255.224 {
  #  range 10.5.5.26 10.5.5.30;
  #  option domain-name-servers ns1.internal.example.org;
  #  option domain-name "internal.example.org";
  #  option routers 10.5.5.1;
  #  option broadcast-address 10.5.5.31;
  #  default-lease-time 600;
  #  max-lease-time 7200;
  #}

  # Hosts which require special configuration options can be listed in
  # host statements.   If no address is specified, the address will be
  # allocated dynamically (if possible), but the host-specific information
  # will still come from the host declaration.

  #host passacaglia {
  #  hardware ethernet 0:0:c0:5d:bd:95;
  #  filename "vmunix.passacaglia";
  #  server-name "toccata.example.com";
  #}

  # Fixed IP addresses can also be specified for hosts.   These addresses
  # should not also be listed as being available for dynamic assignment.
  # Hosts for which fixed IP addresses have been specified can boot using
  # BOOTP or DHCP.   Hosts for which no fixed address is specified can only
  # be booted with DHCP, unless there is an address range on the subnet
  # to which a BOOTP client is connected which has the dynamic-bootp flag
  # set.
  #host fantasia {
  #  hardware ethernet 08:00:07:26:c0:a5;
  #  fixed-address fantasia.example.com;
  #}

  # You can declare a class of clients and then do address allocation
  # based on that.   The example below shows a case where all clients
  # in a certain class get addresses on the 10.17.224/24 subnet, and all
  # other clients get addresses on the 10.0.29/24 subnet.

  #class "foo" {
  #  match if substring (option vendor-class-identifier, 0, 4) = "SUNW";
  #}

  #shared-network 224-29 {
  #  subnet 10.17.224.0 netmask 255.255.255.0 {
  #    option routers rtr-224.example.org;
  #  }
  #  subnet 10.0.29.0 netmask 255.255.255.0 {
  #    option routers rtr-29.example.org;
  #  }
  #  pool {
  #    allow members of "foo";
  #    range 10.17.224.10 10.17.224.250;
  #  }
  #  pool {
  #    deny members of "foo";
  #    range 10.0.29.10 10.0.29.230;
  #  }
  #}

dhcpd_config_debian_11: '{{ dhcpd_config_debian_10 }}'

dhcpd_config_red_hat_enterprise_linux_7: '{{ dhcpd_config_centos_7 }}'

dhcpd_config_red_hat_enterprise_linux_8: '{{ dhcpd_config_centos_8 }}'

dhcpd_config_ubuntu_18_04: |
  # dhcpd.conf
  #
  # Sample configuration file for ISC dhcpd
  #
  # Attention: If /etc/ltsp/dhcpd.conf exists, that will be used as
  # configuration file instead of this file.
  #

  # option definitions common to all supported networks...
  option domain-name "example.org";
  option domain-name-servers ns1.example.org, ns2.example.org;

  default-lease-time 600;
  max-lease-time 7200;

  # The ddns-updates-style parameter controls whether or not the server will
  # attempt to do a DNS update when a lease is confirmed. We default to the
  # behavior of the version 2 packages ('none', since DHCP v2 didn't
  # have support for DDNS.)
  ddns-update-style none;

  # If this DHCP server is the official DHCP server for the local
  # network, the authoritative directive should be uncommented.
  #authoritative;

  # Use this to send dhcp log messages to a different log file (you also
  # have to hack syslog.conf to complete the redirection).
  #log-facility local7;

  # No service will be given on this subnet, but declaring it helps the
  # DHCP server to understand the network topology.

  #subnet 10.152.187.0 netmask 255.255.255.0 {
  #}

  # This is a very basic subnet declaration.

  #subnet 10.254.239.0 netmask 255.255.255.224 {
  #  range 10.254.239.10 10.254.239.20;
  #  option routers rtr-239-0-1.example.org, rtr-239-0-2.example.org;
  #}

  # This declaration allows BOOTP clients to get dynamic addresses,
  # which we don't really recommend.

  #subnet 10.254.239.32 netmask 255.255.255.224 {
  #  range dynamic-bootp 10.254.239.40 10.254.239.60;
  #  option broadcast-address 10.254.239.31;
  #  option routers rtr-239-32-1.example.org;
  #}

  # A slightly different configuration for an internal subnet.
  #subnet 10.5.5.0 netmask 255.255.255.224 {
  #  range 10.5.5.26 10.5.5.30;
  #  option domain-name-servers ns1.internal.example.org;
  #  option domain-name "internal.example.org";
  #  option subnet-mask 255.255.255.224;
  #  option routers 10.5.5.1;
  #  option broadcast-address 10.5.5.31;
  #  default-lease-time 600;
  #  max-lease-time 7200;
  #}

  # Hosts which require special configuration options can be listed in
  # host statements.   If no address is specified, the address will be
  # allocated dynamically (if possible), but the host-specific information
  # will still come from the host declaration.

  #host passacaglia {
  #  hardware ethernet 0:0:c0:5d:bd:95;
  #  filename "vmunix.passacaglia";
  #  server-name "toccata.example.com";
  #}

  # Fixed IP addresses can also be specified for hosts.   These addresses
  # should not also be listed as being available for dynamic assignment.
  # Hosts for which fixed IP addresses have been specified can boot using
  # BOOTP or DHCP.   Hosts for which no fixed address is specified can only
  # be booted with DHCP, unless there is an address range on the subnet
  # to which a BOOTP client is connected which has the dynamic-bootp flag
  # set.
  #host fantasia {
  #  hardware ethernet 08:00:07:26:c0:a5;
  #  fixed-address fantasia.example.com;
  #}

  # You can declare a class of clients and then do address allocation
  # based on that.   The example below shows a case where all clients
  # in a certain class get addresses on the 10.17.224/24 subnet, and all
  # other clients get addresses on the 10.0.29/24 subnet.

  #class "foo" {
  #  match if substring (option vendor-class-identifier, 0, 4) = "SUNW";
  #}

  #shared-network 224-29 {
  #  subnet 10.17.224.0 netmask 255.255.255.0 {
  #    option routers rtr-224.example.org;
  #  }
  #  subnet 10.0.29.0 netmask 255.255.255.0 {
  #    option routers rtr-29.example.org;
  #  }
  #  pool {
  #    allow members of "foo";
  #    range 10.17.224.10 10.17.224.250;
  #  }
  #  pool {
  #    deny members of "foo";
  #    range 10.0.29.10 10.0.29.230;
  #  }
  #}

dhcpd_config_ubuntu_20_04: '{{ dhcpd_config_ubuntu_18_04 }}'

dhcpd_service_enabled: yes

dhcpd_service_name: |
  {{
    {
      'CentOS_7': 'dhcpd.service',
      'CentOS_8': 'dhcpd.service',
      'Debian_10': 'isc-dhcp-server',
      'Debian_11': 'isc-dhcp-server',
      'Red_Hat_Enterprise_Linux_7': 'dhcpd.service',
      'Red_Hat_Enterprise_Linux_8': 'dhcpd.service',
      'Ubuntu_18_04': 'isc-dhcp-server',
      'Ubuntu_20_04': 'isc-dhcp-server'
    }[distribution_id|join('_')|regex_replace('[^A-Za-z0-9 _-]', '_')]
  }}

dhcpd_service_state: 'started'

dhcpd6_config_centos_7: |
  #
  # DHCPv6 Server Configuration file.
  #   see /usr/share/doc/dhcp*/dhcpd6.conf.example
  #   see dhcpd.conf(5) man page
  #

dhcpd6_config_centos_8: |
  #
  # DHCPv6 Server Configuration file.
  #   see /usr/share/doc/dhcp-server/dhcpd6.conf.example
  #   see dhcpd.conf(5) man page
  #

dhcpd6_config_debian_10: |
  # Server configuration file example for DHCPv6
  # From the file used for TAHI tests - addresses chosen
  # to match TAHI rather than example block.

  # IPv6 address valid lifetime
  #  (at the end the address is no longer usable by the client)
  #  (set to 30 days, the usual IPv6 default)
  default-lease-time 2592000;

  # IPv6 address preferred lifetime
  #  (at the end the address is deprecated, i.e., the client should use
  #   other addresses for new connections)
  #  (set to 7 days, the	usual IPv6 default)
  preferred-lifetime 604800;

  # T1, the delay before Renew
  #  (default is 1/2 preferred lifetime)
  #  (set to 1 hour)
  option dhcp-renewal-time 3600;

  # T2, the delay before Rebind (if Renews failed)
  #  (default is 3/4 preferred lifetime)
  #  (set to 2 hours)
  option dhcp-rebinding-time 7200;

  # Enable RFC 5007 support (same than for DHCPv4)
  allow leasequery;

  # Global definitions for name server address(es) and domain search list
  option dhcp6.name-servers 3ffe:501:ffff:100:200:ff:fe00:3f3e;
  option dhcp6.domain-search "test.example.com","example.com";

  # Set preference to 255 (maximum) in order to avoid waiting for
  # additional servers when there is only one
  ##option dhcp6.preference 255;

  # Server side command to enable rapid-commit (2 packet exchange)
  ##option dhcp6.rapid-commit;

  # The delay before information-request refresh
  #  (minimum is 10 minutes, maximum one day, default is to not refresh)
  #  (set to 6 hours)
  option dhcp6.info-refresh-time 21600;

  # Static definition (must be global)
  #host myclient {
  #	# The entry is looked up by this
  #	host-identifier option
  #		dhcp6.client-id 00:01:00:01:00:04:93:e0:00:00:00:00:a2:a2;
  #
  #	# A fixed address
  #	fixed-address6 3ffe:501:ffff:100::1234;
  #
  #	# A fixed prefix
  #	fixed-prefix6 3ffe:501:ffff:101::/64;
  #
  #	# Override of the global definitions,
  #	# works only when a resource (address or prefix) is assigned
  #	option dhcp6.name-servers 3ffe:501:ffff:100:200:ff:fe00:4f4e;
  #
  #	# For debug (to see when the entry statements are executed)
  #	#  (log "sol" when a matching Solicitation is received)
  #	##if packet(0,1) = 1 { log(debug,"sol"); }
  #}
  #
  #host otherclient {
  #        # This host entry is hopefully matched if the client supplies a DUID-LL
  #        # or DUID-LLT containing this MAC address.
  #        hardware ethernet 01:00:80:a2:55:67;
  #
  #        fixed-address6 3ffe:501:ffff:100::4321;
  #}

  # The subnet where the server is attached
  #  (i.e., the server has an address in this subnet)
  #subnet6 3ffe:501:ffff:100::/64 {
  #	# Two addresses available to clients
  #	#  (the third client should get NoAddrsAvail)
  #	range6 3ffe:501:ffff:100::10 3ffe:501:ffff:100::11;
  #
  #	# Use the whole /64 prefix for temporary addresses
  #	#  (i.e., direct application of RFC 4941)
  #	range6 3ffe:501:ffff:100:: temporary;
  #
  #	# Some /64 prefixes available for Prefix Delegation (RFC 3633)
  #	prefix6 3ffe:501:ffff:100:: 3ffe:501:ffff:111:: /64;
  #}

  # A second subnet behind a relay agent
  #subnet6 3ffe:501:ffff:101::/64 {
  #	range6 3ffe:501:ffff:101::10 3ffe:501:ffff:101::11;
  #
  #	# Override of the global definitions,
  #	# works only when a resource (address or prefix) is assigned
  #	option dhcp6.name-servers 3ffe:501:ffff:101:200:ff:fe00:3f3e;
  #
  #}

  # A third subnet behind a relay agent chain
  #subnet6 3ffe:501:ffff:102::/64 {
  #	range6 3ffe:501:ffff:102::10 3ffe:501:ffff:102::11;
  #}

dhcpd6_config_debian_11: '{{ dhcpd6_config_debian_10 }}'

dhcpd6_config_red_hat_enterprise_linux_7: '{{ dhcpd6_config_centos_7 }}'

dhcpd6_config_red_hat_enterprise_linux_8: '{{ dhcpd6_config_centos_8 }}'

dhcpd6_config_ubuntu_18_04: '{{ dhcpd6_config_debian_10 }}'

dhcpd6_config_ubuntu_20_04: '{{ dhcpd6_config_debian_10 }}'

dhcpd6_service_enabled: yes

dhcpd6_service_name: |
  {{
    {
      'CentOS_7': 'dhcpd6.service',
      'CentOS_8': 'dhcpd6.service',
      'Debian_10': 'isc-dhcp-server',
      'Debian_11': 'isc-dhcp-server',
      'Red_Hat_Enterprise_Linux_7': 'dhcpd6.service',
      'Red_Hat_Enterprise_Linux_8': 'dhcpd6.service',
      'Ubuntu_18_04': 'isc-dhcp-server6',
      'Ubuntu_20_04': 'isc-dhcp-server6'
    }[distribution_id|join('_')|regex_replace('[^A-Za-z0-9 _-]', '_')]
  }}

dhcpd6_service_state: 'started'
