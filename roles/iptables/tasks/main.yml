---
# Copyright (c) 2021-2022 Jakob Meng, <jakobmeng@web.de>
# vim:set fileformat=unix tabstop=2 shiftwidth=2 expandtab:
# kate: end-of-line unix; space-indent on; indent-width 2; remove-trailing-spaces modified;

- name: Verify task definitions specified in iptables_config variable
  when: item is not mapping or (item.keys()|difference(['register', 'when']))|list|length != 1
  ansible.builtin.fail:
    msg: >-
      Unsupported keyword or multiple module definitions found:
      {{ (item.keys()|difference(['register', 'when']))|join(', ') }}.
  loop: '{{ iptables_config|default([]) }}'

- name: Prepare system to persist iptables rules across reboots
  when: iptables_persistence
  block:
  - name: Install dependencies of collection jm1.pkg
    ansible.builtin.import_role:
      name: jm1.pkg.setup # If Ansible raises "ERROR! the role 'jm1.pkg.setup' was not found" then you might use the
                          # ansible-galaxy and the provided requirements.yml to install all missing role dependencies.

  - name: Satisfy requirements on CentOS and Red Hat Enterprise Linux
    when: distribution_id|first in ['CentOS', 'Red Hat Enterprise Linux']
    jm1.pkg.meta_pkg:
      name: "jm1-cloudy-iptables"
      version: "1"
      depends:
      - iptables-services

  - name: Satisfy requirements on Debian and Ubuntu
    when: distribution_id|first in ['Debian', 'Ubuntu']
    jm1.pkg.meta_pkg:
      name: "jm1-cloudy-iptables"
      version: "1"
      depends:
      - iptables-persistent

  - name: Manage iptables service
    when: distribution_id|first in ['CentOS', 'Red Hat Enterprise Linux']
    ansible.builtin.service:
      enabled: '{{ iptables_service_enabled }}'
      name: '{{ iptables_service_name }}'
      state: '{{ iptables_service_state }}'

- name: Run tasks specified in iptables_config variable
  jm1.ansible.execute_module:
    name: "{{ (item.keys()|difference(['register', 'when']))|first }}"
    args: "{{ item[(item.keys()|difference(['register', 'when']))|first] }}"
    register: "{{ item['register']|default(omit) }}"
    when: item['when']|default(omit)
  loop: "{{ iptables_config|default([]) }}"
  notify:
  - 'Store iptables rules on CentOS and Red Hat Enterprise Linux'
  - 'Store iptables rules on Debian and Ubuntu'
