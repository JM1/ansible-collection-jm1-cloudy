---
# Copyright (c) 2021 Jakob Meng, <jakobmeng@web.de>
# vim:set fileformat=unix tabstop=2 shiftwidth=2 expandtab:
# kate: end-of-line unix; space-indent on; indent-width 2; remove-trailing-spaces modified;

- name: Manage order of boot devices
  when: force_ipmi_boot == 'yes'
  ipmi_boot:
    bootdev: '{{ ipmi_boot_device }}'
    name: '{{ ipmi_host }}'
    password: '{{ ipmi_password }}'
    persistent: '{{ impi_boot_persistent }}'
    port: '{{ ipmi_port }}'
    uefiboot: '{{ ipmi_uefiboot }}'
    user: '{{ ipmi_username }}'

- name: Manage power state
  when: force_ipmi_power == 'yes'
  ipmi_power:
    name: '{{ ipmi_host }}'
    password: '{{ ipmi_password }}'
    port: '{{ ipmi_port }}'
    state: '{{ ipmi_power_state }}'
    user: '{{ ipmi_username }}'

- name: Boot if system is off else reset it and then boot system from network
  when: force_ipmi_boot_from_network == 'yes'
  block:
  - name: Configure system to boot from network
    ipmi_boot:
      bootdev: network
      name: '{{ ipmi_host }}'
      password: '{{ ipmi_password }}'
      persistent: no
      port: '{{ ipmi_port }}'
      uefiboot: '{{ ipmi_uefiboot }}'
      user: '{{ ipmi_username }}'

  - name: Boot if system is off else reset it
    ipmi_power:
      name: '{{ ipmi_host }}'
      password: '{{ ipmi_password }}'
      port: '{{ ipmi_port }}'
      state: boot
      user: '{{ ipmi_username }}'

  - name: Wait for system to come up
    wait_for:
      delay: 120
      host: '{{ ansible_host }}'
      port: 22
      timeout: 900
