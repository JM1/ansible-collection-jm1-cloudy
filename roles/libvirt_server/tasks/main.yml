---
# Copyright (c) 2020-2021 Jakob Meng, <jakobmeng@web.de>
# vim:set fileformat=unix tabstop=2 shiftwidth=2 expandtab:
# kate: end-of-line unix; space-indent on; indent-width 2; remove-trailing-spaces modified;

- name: Load domain facts
  import_role:
    name: "libvirt_server_info"

- name: Fail if required vars are not set
  fail:
  # A cloud-init config drive volume is optional
  when: >
    (libvirt_configdrive|default(None) != None and (
        libvirt_configdrive|length == 0 or
        libvirt_configdrive_filesystem == None or libvirt_configdrive_filesystem|length == 0 or
        libvirt_configdrive_format == None or libvirt_configdrive_format|length == 0 or
        libvirt_configdrive_pool == None or libvirt_configdrive_pool|length == 0 or
        cloudinit_userdata == None or cloudinit_userdata|length == 0
    )) or
    libvirt_domain == None or libvirt_domain|length == 0 or
    libvirt_domain_state == None or libvirt_domain_state|length == 0 or
    state == None or state|length == 0 or
    libvirt_uri == None or libvirt_uri|length == 0

- name: Fail if vars have invalid values
  fail:
  when: >
    (state != 'present' and state != 'absent') or
    libvirt_domain_state not in ['running', 'paused', 'pmsuspended', 'shutoff']

- name: Stop domain if it's still running but going to be removed
  when: libvirt_server_info != None and state == 'absent'
  community.libvirt.virt:
    state: destroyed
    name: '{{ libvirt_domain }}'
    uri: '{{ libvirt_uri }}'

- name: Create cloud-init config drive volume
  when: state == 'present' and libvirt_configdrive|default(None) != None
  jm1.libvirt.volume_cloudinit:
    filesystem: '{{ libvirt_configdrive_filesystem }}'
    format: '{{ libvirt_configdrive_format }}'
    metadata: '{{ cloudinit_metadata }}'
    name: '{{ libvirt_configdrive }}'
    networkconfig: '{{ cloudinit_networkconfig }}'
    pool: '{{ libvirt_configdrive_pool }}'
    state: present
    userdata: '{{ cloudinit_userdata }}'
    uri: '{{ libvirt_uri }}'

- name: Create/Remove domain
  jm1.libvirt.domain:
    uri: '{{ libvirt_uri }}'
    name: '{{ libvirt_domain }}'
    hardware: '{{ libvirt_hardware }}'
    state: '{{ state }}'
  notify: 'Start libvirt domain once created'

- name: Remove cloud-init config drive volume
  when: state == 'absent' and libvirt_configdrive|default(None) != None
  jm1.libvirt.volume_cloudinit:
    name: '{{ libvirt_configdrive }}'
    pool: '{{ libvirt_configdrive_pool }}'
    state: absent
    uri: '{{ libvirt_uri }}'

- name: Autostart domain
  when: state == 'present'
  community.libvirt.virt:
    autostart: '{{ libvirt_domain_autostart }}'
    name: '{{ libvirt_domain }}'
    uri: '{{ libvirt_uri }}'

- name: Start and wait for libvirt domain now
  meta: flush_handlers
