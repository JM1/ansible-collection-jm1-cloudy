---
# Copyright (c) 2020-2021 Jakob Meng, <jakobmeng@web.de>
# vim:set fileformat=unix tabstop=2 shiftwidth=2 expandtab:
# kate: end-of-line unix; space-indent on; indent-width 2; remove-trailing-spaces modified;

- name: Fail if vars have invalid values
  ansible.builtin.fail:
  when: libvirt_domain_state not in ['running', 'paused', 'pmsuspended', 'shutoff'] or
        state not in ['present', 'absent']

- name: Fetch domain info
  community.libvirt.virt:
    command: info
    uri: '{{ libvirt_uri }}'
  register: libvirt_domain_info

- name: Stop domain if it's still running but going to be removed
  when: libvirt_domain in libvirt_domain_info and state == 'absent'
  community.libvirt.virt:
    state: destroyed
    name: '{{ libvirt_domain }}'
    uri: '{{ libvirt_uri }}'

- name: Create cloud-init config drive volume
  when: state == 'present' and libvirt_configdrive | default(None) != None
  jm1.libvirt.volume_cloudinit:
    filesystem: '{{ libvirt_configdrive_filesystem }}'
    format: '{{ libvirt_configdrive_format }}'
    metadata: '{{ cloudinit_metadata }}'
    name: '{{ libvirt_configdrive }}'
    networkconfig: '{{ cloudinit_networkconfig }}'
    pool: '{{ libvirt_configdrive_pool }}'
    state: present
    userdata: '{{ cloudinit_userdata }}'
    uri: '{{ libvirt_uri }}'

- name: Create/Remove domain
  jm1.libvirt.domain:
    uri: '{{ libvirt_uri }}'
    name: '{{ libvirt_domain }}'
    hardware: '{{ libvirt_hardware }}'
    state: '{{ state }}'
  notify: 'Start libvirt domain once created'

- name: Remove cloud-init config drive volume
  when: state == 'absent' and libvirt_configdrive | default(None) != None
  jm1.libvirt.volume_cloudinit:
    name: '{{ libvirt_configdrive }}'
    pool: '{{ libvirt_configdrive_pool }}'
    state: absent
    uri: '{{ libvirt_uri }}'

- name: Autostart domain
  when: state == 'present'
  community.libvirt.virt:
    autostart: '{{ libvirt_domain_autostart }}'
    name: '{{ libvirt_domain }}'
    uri: '{{ libvirt_uri }}'

- name: Start and wait for libvirt domain now
  ansible.builtin.meta: flush_handlers
