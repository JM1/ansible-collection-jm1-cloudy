---
# Copyright (c) 2020-2022 Jakob Meng, <jakobmeng@web.de>
# vim:set fileformat=unix tabstop=2 shiftwidth=2 expandtab:
# kate: end-of-line unix; space-indent on; indent-width 2; remove-trailing-spaces modified;

- name: Detach floating ips
  loop: "{{ openstack_server_floating_ips }}"
  openstack.cloud.floating_ip: "{{ item
    | combine({} if 'auth' in item else {'auth': openstack_auth})
    | combine({} if 'cloud' in item else {'cloud': openstack_cloud})
    | combine({} if 'interface' in item else {'interface': openstack_interface})
    | combine({} if 'server' in item else {'server': openstack_server_name})
    | dict2items | rejectattr('key', 'eq', 'state') | list | items2dict
    | combine({'state': 'absent', 'wait': 'yes'})
  }}"

- name: Delete compute instance
  openstack.cloud.server:
    auth: "{{ item.auth if 'auth' in openstack_server_config else openstack_auth }}"
    cloud: "{{ item.cloud if 'cloud' in openstack_server_config else openstack_cloud }}"
    delete_fip: "{{ item.delete_fip if 'delete_fip' in openstack_server_config else omit }}"
    interface: "{{ item.interface if 'interface' in openstack_server_config else openstack_interface }}"
    name: '{{ openstack_server_name }}'
    state: absent

- name: Delete network ports
  loop: '{{ openstack_server_ports }}'
  openstack.cloud.port:
    auth: "{{ item.auth if 'auth' in item else openstack_auth }}"
    cloud: "{{ item.cloud if 'cloud' in item else openstack_cloud }}"
    interface: "{{ item.interface if 'interface' in item else openstack_interface }}"
    name: '{{ item.name | mandatory }}'
    state: absent
  when: item.network | default(None) != None # Only delete what might has been created
