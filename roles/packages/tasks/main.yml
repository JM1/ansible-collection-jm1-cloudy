---
# Copyright (c) 2020-2022 Jakob Meng, <jakobmeng@web.de>
# vim:set fileformat=unix tabstop=2 shiftwidth=2 expandtab:
# kate: end-of-line unix; space-indent on; indent-width 2; remove-trailing-spaces modified;

- name: Install, upgrade or remove packages
  when: # packages is a list with dictionaries and maybe strings
        # task will fail if list has other types
        packages is iterable and packages is not mapping and packages | length > 0 and
        (packages | map('type_debug') | unique | length > 1 or packages | first is mapping)
  failed_when: packages_dicts_list_result.failed or not (item is mapping or item is string)
  loop: '{{ packages if packages is iterable and packages is not mapping else [] }}'
  ansible.builtin.package:
    name: '{{ item.name | default(omit) if item is mapping else item }}'
    state: "{{ item.state | default(omit) if item is mapping else 'present' }}"
    use: '{{ item.use | default(omit) if item is mapping else omit }}'

- name: Install, upgrade or remove packages
  when: packages is mapping # dictionary
  ansible.builtin.package:
    name: '{{ packages.name | mandatory }}'
    state: "{{ packages.state | default(omit) }}"
    use: '{{ packages.use | default(omit) }}'

- name: Bulk install packages
  when: # packages is a list of strings
        packages is iterable and packages is not mapping and
        packages | map('type_debug') | unique | length == 1 and packages | first is string
  ansible.builtin.package:
    name: '{{ packages }}'
    state: 'present'
