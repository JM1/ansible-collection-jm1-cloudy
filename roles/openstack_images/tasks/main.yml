---
# Copyright (c) 2020-2021 Jakob Meng, <jakobmeng@web.de>
# vim:set fileformat=unix tabstop=2 shiftwidth=2 expandtab:
# kate: end-of-line unix; space-indent on; indent-width 2; remove-trailing-spaces modified;

- name: Load images into or remove images from OpenStack image repository
  loop: '{{ openstack_images | default([]) }}'
  jm1.openstack.image_import: "{{ item
    | dict2items | rejectattr('key', 'eq', 'properties') | list | items2dict
    | combine({} if 'auth' in item else {'auth': openstack_auth})
    | combine({} if 'cloud' in item else {'cloud': openstack_cloud})
    | combine({} if 'interface' in item else {'interface': openstack_interface})
  }}"
  register: openstack_image_import_result

- name: Set image properties in OpenStack image repository
  loop: '{{ openstack_image_import_result.results | zip(openstack_images) | list }}'
  openstack.cloud.image:
    auth: "{{ item.1.auth if 'auth' in item.1 else openstack_auth }}"
    cloud: "{{ item.1.cloud if 'cloud' in item.1 else openstack_cloud }}"
    interface: "{{ item.1.interface if 'interface' in item.1 else openstack_interface }}"
    name: '{{ item.0.id | default(item.0.name) }}'
    properties: '{{ item.1.properties }}'
  when:
    openstack_images is defined and openstack_images | length > 0 and
    item.0.id | default(item.0.name) is defined and item.1.state | default('present') == 'present' and
    item.1.properties is defined

  # openstack.cloud.image does not return change=True when updating properties aka metadata only
