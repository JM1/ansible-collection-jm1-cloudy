---
# Copyright (c) 2023 Jakob Meng, <jakobmeng@web.de>
# vim:set fileformat=unix tabstop=2 shiftwidth=2 expandtab:
# kate: end-of-line unix; space-indent on; indent-width 2; remove-trailing-spaces modified;

- name: Assert task definitions exist for booting cluster nodes with agent image
  when: openshift_abi_boot_code | mandatory | length == 0
  ansible.builtin.fail:
    msg: "Variable 'openshift_abi_boot_code' must define tasks which boot cluster nodes with the agent image."

- name: Assert task definitions exist for removing agent image from cluster nodes
  when: openshift_abi_cleanup_code | mandatory | length == 0
  ansible.builtin.fail:
    msg: "Variable 'openshift_abi_cleanup_code' must define tasks which removes the agent image from cluster nodes"

- name: Assert task definitions exist for creating install-config.yaml, agent-config.yaml and other manifests
  when: openshift_abi_config | mandatory | length == 0
  ansible.builtin.fail:
    msg: >-
      Variable 'openshift_abi_config' must define tasks which creating install-config.yaml, agent-config.yaml and other
      manifests for openshift-install.

- name: Verify task definitions which boot cluster nodes with agent image
  when: item is not mapping
        or (item.keys() | difference(['become', 'become_exe', 'become_flags', 'become_method', 'become_user',
                                      'environment', 'when'])) | list | length != 1
  ansible.builtin.fail:
    msg: >-
      Unsupported keyword or multiple module definitions found:
      {{ (item.keys() | difference(['become', 'become_exe', 'become_flags', 'become_method', 'become_user',
                                    'environment', 'when'])) | join(', ') }}.
  # Ansible will evaluate 'loop' when handling conditionals aka 'when'. When openshift_abi_boot_code is not defined
  # Ansible's mandatory filter will raise an exception while evaluating 'when' and thus 'loop'. For hosts which are
  # supposed to skip this role, e.g. because they are not in group svc_openshift_abi, this is undesired, so the
  # mandatory filter cannot be used here. Handling undefined variables is done in a separate task before.
  loop: '{{ openshift_abi_boot_code | default([]) }}'

- name: Verify task definitions which removes agent image from cluster nodes
  when: item is not mapping
        or (item.keys() | difference(['become', 'become_exe', 'become_flags', 'become_method', 'become_user',
                                      'environment', 'when'])) | list | length != 1
  ansible.builtin.fail:
    msg: >-
      Unsupported keyword or multiple module definitions found:
      {{ (item.keys() | difference(['become', 'become_exe', 'become_flags', 'become_method', 'become_user',
                                    'environment', 'when'])) | join(', ') }}.
  # Ansible will evaluate 'loop' when handling conditionals aka 'when'. When openshift_abi_cleanup_code is not defined
  # Ansible's mandatory filter will raise an exception while evaluating 'when' and thus 'loop'. For hosts which are
  # supposed to skip this role, e.g. because they are not in group svc_openshift_abi, this is undesired, so the
  # mandatory filter cannot be used here. Handling undefined variables is done in a separate task before.
  loop: '{{ openshift_abi_cleanup_code | default([]) }}'

- name: Verify task definitions which create install-config.yaml, agent-config.yaml and other manifests
  when: item is not mapping
        or (item.keys() | difference(['become', 'become_exe', 'become_flags', 'become_method', 'become_user',
                                      'environment', 'when'])) | list | length != 1
  ansible.builtin.fail:
    msg: >-
      Unsupported keyword or multiple module definitions found:
      {{ (item.keys() | difference(['become', 'become_exe', 'become_flags', 'become_method', 'become_user',
                                    'environment', 'when'])) | join(', ') }}.
  # Ansible will evaluate 'loop' when handling conditionals aka 'when'. When openshift_abi_config is not defined
  # Ansible's mandatory filter will raise an exception while evaluating 'when' and thus 'loop'. For hosts which are
  # supposed to skip this role, e.g. because they are not in group svc_openshift_abi, this is undesired, so the
  # mandatory filter cannot be used here. Handling undefined variables is done in a separate task before.
  loop: '{{ openshift_abi_config | default([]) }}'

- name: Expand paths for Ansible user
  become: false
  ansible.builtin.stat:
    path: '{{ item }}'
  loop:
  - '~'
  - '{{ openshift_abi_config_dir }}'
  - '{{ openshift_abi_install_dir }}'
  - '{{ openshift_abi_pullsecret_file }}'
  register: openshift_abi_paths

- name: Extract paths for Ansible user
  ansible.builtin.set_fact:
    # openshift_abi_paths.results.*.stat.path is returned for existing paths only
    openshift_abi_home_dir: '{{ openshift_abi_paths.results.0.invocation.module_args.path }}'
    openshift_abi_config_dir: '{{ openshift_abi_paths.results.1.invocation.module_args.path }}'
    openshift_abi_install_dir: '{{ openshift_abi_paths.results.2.invocation.module_args.path }}'
    openshift_abi_pullsecret_file: '{{ openshift_abi_paths.results.3.invocation.module_args.path }}'

- name: Create config directory for openshift-install
  ansible.builtin.file:
    group: '{{ ansible_user }}'
    mode: u=rwx,g=rx,o=
    owner: '{{ ansible_user }}'
    path: '{{ openshift_abi_config_dir }}'
    state: directory

- name: Check if manifests have been generated
  ansible.builtin.stat:
    path: '{{ openshift_abi_config_dir }}/cluster-manifests'
  register: openshift_abi_path_manifests_marker

- name: Check if agent image has been created
  ansible.builtin.stat:
    # agent image has an architecture dependent filename, e.g. agent.x86_64.iso
    path: '{{ openshift_abi_config_dir }}/auth/kubeconfig'
  register: openshift_abi_path_agent_image_marker

- name: Check if bootstrapping of the rendezvous host (bootstrap host) has been completed
  ansible.builtin.stat:
    path: '{{ openshift_abi_config_dir }}/.abi-bootstrap-complete'
  register: openshift_abi_path_bootstrap_marker

- name: Check if OpenShift Agent-based Installer has been completed successfully
  ansible.builtin.stat:
    path: '{{ openshift_abi_config_dir }}/.abi-install-complete'
  register: openshift_abi_path_install_marker

- name: Ensure markers are consistent
  ansible.builtin.assert:
    that:
      - openshift_abi_path_agent_image_marker.stat.exists or not openshift_abi_path_bootstrap_marker.stat.exists
      - openshift_abi_path_bootstrap_marker.stat.exists or not openshift_abi_path_install_marker.stat.exists

- name: Create install-config.yaml, agent-config.yaml and other manifests for openshift-install
  # openshift-install will delete install-config.yaml and agent-config.yaml when generating manifests
  # openshift-install will delete manifests when agent image has been created
  when: not openshift_abi_path_manifests_marker.stat.exists and not openshift_abi_path_agent_image_marker.stat.exists
  # Values for 'become' and related keywords will not be inherited from the role's caller when using 'omit' as
  # default.
  become: "{{ item['become'] | default(omit) }}"
  become_exe: "{{ item['become_exe'] | default(omit) }}"
  become_flags: "{{ item['become_flags'] | default(omit) }}"
  become_method: "{{ item['become_method'] | default(omit) }}"
  become_user: "{{ item['become_user'] | default(omit) }}"
  jm1.ansible.execute_module:
    name: "{{ (item.keys() | difference(['become', 'become_exe', 'become_flags', 'become_method', 'become_user',
                                          'environment', 'when'])) | first }}"
    args: "{{ item[(item.keys() | difference(['become', 'become_exe', 'become_flags', 'become_method', 'become_user',
                                              'environment', 'when'])) | first] }}"
    when: "{{ item['when'] | default(omit) }}"
  environment: "{{ item['environment'] | default(omit) }}"
  loop: "{{ openshift_abi_config | default([]) }}"

- name: Create pull secret for openshift-install
  when: openshift_abi_pullsecret | default(None) != None
  ansible.builtin.template:
    dest: '{{ openshift_abi_pullsecret_file }}'
    group: '{{ ansible_user }}'
    mode: u=rw,g=r,o=
    owner: '{{ ansible_user }}'
    src: pull-secret.txt.j2

- name: Extract openshift-install
  become: true
  become_flags: '--preserve-env=PATH'
  ansible.builtin.shell: # noqa risky-shell-pipe
    chdir: '{{ openshift_abi_home_dir }}'
    cmd: |
      oc adm release extract \
        {{ ('--registry-config ' + openshift_abi_pullsecret_file)
           if openshift_abi_pullsecret | default(None) != None
           else ''
        }} \
        --command=openshift-install \
        --to '{{ openshift_abi_install_dir }}/' \
        '{{ openshift_abi_release_image | mandatory }}'
    creates: '{{ openshift_abi_install_dir }}/openshift-install'

- name: Get openshift-install version
  become: false
  changed_when: false
  ansible.builtin.command:
    chdir: '{{ openshift_abi_home_dir }}'
    cmd: openshift-install version
  register: openshift_abi_openshift_install_version

- name: Print openshift-install version
  ansible.builtin.debug:
    msg: '{{ openshift_abi_openshift_install_version.stdout_lines }}'

- name: Generate manifests for OpenShift Agent-based Installer
  # openshift-install will delete manifests when cluster has been created
  when: not openshift_abi_path_agent_image_marker.stat.exists
  become: false
  ansible.builtin.command:
    chdir: '{{ openshift_abi_home_dir }}'
    cmd: openshift-install --dir '{{ openshift_abi_config_dir }}' --log-level debug agent create cluster-manifests
    creates: '{{ openshift_abi_config_dir }}/cluster-manifests'

- name: Create agent image for OpenShift Agent-based Installer
  become: false
  ansible.builtin.command:
    chdir: '{{ openshift_abi_home_dir }}'
    cmd: openshift-install --dir '{{ openshift_abi_config_dir }}' --log-level debug agent create image
    creates: '{{ openshift_abi_config_dir }}/auth/kubeconfig'

- name: Boot cluster nodes with agent image
  when: not openshift_abi_path_bootstrap_marker.stat.exists
  # Values for 'become' and related keywords will not be inherited from the role's caller when using 'omit' as
  # default.
  become: "{{ item['become'] | default(omit) }}"
  become_exe: "{{ item['become_exe'] | default(omit) }}"
  become_flags: "{{ item['become_flags'] | default(omit) }}"
  become_method: "{{ item['become_method'] | default(omit) }}"
  become_user: "{{ item['become_user'] | default(omit) }}"
  jm1.ansible.execute_module:
    name: "{{ (item.keys() | difference(['become', 'become_exe', 'become_flags', 'become_method', 'become_user',
                                          'environment', 'when'])) | first }}"
    args: "{{ item[(item.keys() | difference(['become', 'become_exe', 'become_flags', 'become_method', 'become_user',
                                              'environment', 'when'])) | first] }}"
    when: "{{ item['when'] | default(omit) }}"
  environment: "{{ item['environment'] | default(omit) }}"
  loop: "{{ openshift_abi_boot_code | default([]) }}"

- name: Wait for rendezvous host (bootstrap host) to be bootstrapped
  when: not openshift_abi_path_bootstrap_marker.stat.exists
  become: false
  changed_when: false
  ansible.builtin.command:
    chdir: '{{ openshift_abi_home_dir }}'
    cmd: openshift-install --dir '{{ openshift_abi_config_dir }}' --log-level debug agent wait-for bootstrap-complete

- name: Create a marker file to signal bootstrap completion of the rendezvous host (bootstrap host)
  ansible.builtin.copy:
    content: |
      # 2023 Jakob Meng, <jakobmeng@web.de>
      # Rendezvous host (bootstrap host) of OpenShift Agent-based Installer has been bootstrapped successfully.
    dest: '{{ openshift_abi_config_dir }}/.abi-bootstrap-complete'
    mode: u=rw,g=r,o=r
    group: '{{ ansible_user }}'
    owner: '{{ ansible_user }}'

- name: Wait for cluster installation to complete
  when: not openshift_abi_path_install_marker.stat.exists
  become: false
  changed_when: false
  ansible.builtin.command:
    chdir: '{{ openshift_abi_home_dir }}'
    cmd: openshift-install --dir '{{ openshift_abi_config_dir }}' --log-level debug agent wait-for install-complete

- name: Create a marker file to signal successful completion of OpenShift Agent-based Installer
  ansible.builtin.copy:
    content: |
      # 2023 Jakob Meng, <jakobmeng@web.de>
      # OpenShift Agent-based Installer has been completed successfully.
    dest: '{{ openshift_abi_config_dir }}/.abi-install-complete'
    mode: u=rw,g=r,o=r
    group: '{{ ansible_user }}'
    owner: '{{ ansible_user }}'

- name: Remove agent image from cluster nodes
  when: not openshift_abi_path_install_marker.stat.exists
  # Values for 'become' and related keywords will not be inherited from the role's caller when using 'omit' as
  # default.
  become: "{{ item['become'] | default(omit) }}"
  become_exe: "{{ item['become_exe'] | default(omit) }}"
  become_flags: "{{ item['become_flags'] | default(omit) }}"
  become_method: "{{ item['become_method'] | default(omit) }}"
  become_user: "{{ item['become_user'] | default(omit) }}"
  jm1.ansible.execute_module:
    name: "{{ (item.keys() | difference(['become', 'become_exe', 'become_flags', 'become_method', 'become_user',
                                          'environment', 'when'])) | first }}"
    args: "{{ item[(item.keys() | difference(['become', 'become_exe', 'become_flags', 'become_method', 'become_user',
                                              'environment', 'when'])) | first] }}"
    when: "{{ item['when'] | default(omit) }}"
  environment: "{{ item['environment'] | default(omit) }}"
  loop: "{{ openshift_abi_cleanup_code | default([]) }}"
