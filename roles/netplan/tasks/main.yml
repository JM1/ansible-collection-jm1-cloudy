---
# Copyright (c) 2021 Jakob Meng, <jakobmeng@web.de>
# vim:set fileformat=unix tabstop=2 shiftwidth=2 expandtab:
# kate: end-of-line unix; space-indent on; indent-width 2; remove-trailing-spaces modified;

- name: Load variables to identify OS
  import_role:
    name: jm1.common # If Ansible raises "ERROR! the role 'jm1.common' was not found" then you might use the
                     # ansible-galaxy and the provided requirements.yml to install all missing role dependencies.

- name: Install dependencies of collection jm1.pkg
  import_role:
    name: jm1.pkg.setup # If Ansible raises "ERROR! the role 'jm1.pkg.setup' was not found" then you might use the
                        # ansible-galaxy and the provided requirements.yml to install all missing role dependencies.

- name: Satisfy requirements
  jm1.pkg.meta_pkg:
    name: "jm1-cloudy-netplan"
    version: "1"
    depends:
    - netplan.io

- name: Change blocks in Netplan configuration
  loop: '{{ netplan_config|default([]) }}'
  when: "'blockinfile' in item"
  blockinfile: "{{ item['blockinfile'] }}"
  register: netplan_config_blockinfile_result
  notify:
  - 'Apply Netplan configuration'

- name: Copy files to Netplan configuration
  loop: '{{ netplan_config|default([]) }}'
  when: "'copy' in item"
  copy: "{{ item['copy'] }}"
  register: netplan_config_copy_result
  notify:
  - 'Apply Netplan configuration'

- name: Change debconf selections for Netplan
  loop: '{{ netplan_config|default([]) }}'
  when: "'debconf' in item"
  debconf: "{{ item['debconf'] }}"
  register: netplan_config_debconf_result
  notify:
  - 'Apply Netplan configuration'

- name: Manage files in Netplan configuration
  loop: '{{ netplan_config|default([]) }}'
  when: "'file' in item"
  file: "{{ item['file'] }}"
  register: netplan_config_file_result
  notify:
  - 'Apply Netplan configuration'

- name: Change lines in Netplan configuration
  loop: '{{ netplan_config|default([]) }}'
  when: "'lineinfile' in item"
  lineinfile: "{{ item['lineinfile'] }}"
  register: netplan_config_lineinfile_result
  notify:
  - 'Apply Netplan configuration'

- name: Generate Netplan configuration from templates
  loop: '{{ netplan_config|default([]) }}'
  when: "'template' in item"
  template: "{{ item['template'] }}"
  register: netplan_config_template_result
  notify:
  - 'Apply Netplan configuration'

#- name: Change blocks in Netplan configuration
#  loop: '{{ netplan_config|default([]) }}'
#  when: "'block' in item"
#  blockinfile:
#    attributes: '{{ item.attributes|default(omit) }}'
#    backup: '{{ item.backup|default(omit) }}'
#    block: '{{ item.block|default(omit) }}'
#    create: '{{ item.create|default(omit) }}'
#    group: '{{ item.group|default(omit) }}'
#    insertafter: '{{ item.insertafter|default(omit) }}'
#    insertbefore: '{{ item.insertbefore|default(omit) }}'
#    marker: '{{ item.marker|default(omit) }}'
#    marker_begin: '{{ item.marker_begin|default(omit) }}'
#    marker_end: '{{ item.marker_end|default(omit) }}'
#    mode: '{{ item.mode|default(omit) }}'
#    owner: '{{ item.owner|default(omit) }}'
#    path: '{{ item.path|default(omit) }}'
#    selevel: '{{ item.selevel|default(omit) }}'
#    serole: '{{ item.serole|default(omit) }}'
#    setype: '{{ item.setype|default(omit) }}'
#    seuser: '{{ item.seuser|default(omit) }}'
#    state: '{{ item.state|default(omit) }}'
#    unsafe_writes: '{{ item.unsafe_writes|default(omit) }}'
#    validate: '{{ item.validate|default(omit) }}'
#  register: netplan_config_blocks_result
#  notify:
#  - 'Apply Netplan configuration'
#
#- name: Change files in Netplan configuration
#  loop: '{{ netplan_config|default([]) }}'
#  when: "'content' in item"
#  copy:
#    attributes: '{{ item.attributes|default(omit) }}'
#    backup: '{{ item.backup|default(omit) }}'
#    checksum: '{{ item.checksum|default(omit) }}'
#    content: '{{ item.content|default(omit) }}'
#    decrypt: '{{ item.decrypt|default(omit) }}'
#    dest: '{{ item.dest|default(omit) }}'
#    directory_mode: '{{ item.directory_mode|default(omit) }}'
#    follow: '{{ item.follow|default(omit) }}'
#    force: '{{ item.force|default(omit) }}'
#    group: '{{ item.group|default(omit) }}'
#    local_follow: '{{ item.local_follow|default(omit) }}'
#    mode: '{{ item.mode|default(omit) }}'
#    owner: '{{ item.owner|default(omit) }}'
#    remote_src: '{{ item.remote_src|default(omit) }}'
#    selevel: '{{ item.selevel|default(omit) }}'
#    serole: '{{ item.serole|default(omit) }}'
#    setype: '{{ item.setype|default(omit) }}'
#    seuser: '{{ item.seuser|default(omit) }}'
#    src: '{{ item.src|default(omit) }}'
#    unsafe_writes: '{{ item.unsafe_writes|default(omit) }}'
#    validate: '{{ item.validate|default(omit) }}'
#  register: netplan_config_files_result
#  notify:
#  - 'Apply Netplan configuration'
#
#- name: Change lines in Netplan configuration
#  loop: '{{ netplan_config|default([]) }}'
#  when: "'line' in item"
#  lineinfile:
#    attributes: '{{ item.attributes|default(omit) }}'
#    backrefs: '{{ item.backrefs|default(omit) }}'
#    backup: '{{ item.backup|default(omit) }}'
#    create: '{{ item.create|default(omit) }}'
#    firstmatch: '{{ item.firstmatch|default(omit) }}'
#    group: '{{ item.group|default(omit) }}'
#    insertafter: '{{ item.insertafter|default(omit) }}'
#    insertbefore: '{{ item.insertbefore|default(omit) }}'
#    line: '{{ item.line|default(omit) }}'
#    mode: '{{ item.mode|default(omit) }}'
#    others: '{{ item.others|default(omit) }}'
#    owner: '{{ item.owner|default(omit) }}'
#    path: '{{ item.path|default(omit) }}'
#    regexp: '{{ item.regexp|default(omit) }}'
#    selevel: '{{ item.selevel|default(omit) }}'
#    serole: '{{ item.serole|default(omit) }}'
#    setype: '{{ item.setype|default(omit) }}'
#    seuser: '{{ item.seuser|default(omit) }}'
#    state: '{{ item.state|default(omit) }}'
#    unsafe_writes: '{{ item.unsafe_writes|default(omit) }}'
#    validate: '{{ item.validate|default(omit) }}'
#  register: netplan_config_lines_result
#  notify:
#  - 'Apply Netplan configuration'

- name: Apply Netplan configuration now
  meta: flush_handlers

- name: Debug role variables
  debug:
    msg:
      netplan_config_blockinfile_result: '{{ netplan_config_blockinfile_result }}'
      netplan_config_copy_result: '{{ netplan_config_copy_result }}'
      netplan_config_debconf_result: '{{ netplan_config_debconf_result }}'
      netplan_config_file_result: '{{ netplan_config_file_result }}'
      netplan_config_lineinfile_result: '{{ netplan_config_lineinfile_result }}'
      netplan_config_template_result: '{{ netplan_config_template_result }}'
  tags:
    - never
    - debug
