---
# Copyright (c) 2020-2021 Jakob Meng, <jakobmeng@web.de>
# vim:set fileformat=unix tabstop=2 shiftwidth=2 expandtab:
# kate: end-of-line unix; space-indent on; indent-width 2; remove-trailing-spaces modified;

- name: Create OpenStack networks
  loop: '{{ openstack_networks | default([]) }}'
  when: item.state | default('present') == 'present'
  openstack.cloud.network: "{{ item
    | combine({} if 'auth' in item else {'auth': openstack_auth})
    | combine({} if 'cloud' in item else {'cloud': openstack_cloud})
    | combine({} if 'interface' in item else {'interface': openstack_interface})
  }}"

- name: Create OpenStack subnets
  loop: '{{ openstack_subnets | default([]) }}'
  when: item.state | default('present') == 'present'
  openstack.cloud.subnet: "{{ item
    | combine({} if 'auth' in item else {'auth': openstack_auth})
    | combine({} if 'cloud' in item else {'cloud': openstack_cloud})
    | combine({} if 'interface' in item else {'interface': openstack_interface})
  }}"

- name: Create OpenStack routers
  loop: '{{ openstack_routers | default([]) }}'
  when: item.state | default('present') == 'present'
  openstack.cloud.router: "{{ item
    | combine({} if 'auth' in item else {'auth': openstack_auth})
    | combine({} if 'cloud' in item else {'cloud': openstack_cloud})
    | combine({} if 'interface' in item else {'interface': openstack_interface})
  }}"

- name: Create OpenStack ports
  loop: '{{ openstack_ports | default([]) }}'
  when: item.state | default('present') == 'present'
  openstack.cloud.port: "{{ item
    | combine({} if 'auth' in item else {'auth': openstack_auth})
    | combine({} if 'cloud' in item else {'cloud': openstack_cloud})
    | combine({} if 'interface' in item else {'interface': openstack_interface})
  }}"

- name: Allocate OpenStack floating ips
  loop: '{{ openstack_floating_ips | default([]) }}'
  when: item.state | default('present') == 'present'
  jm1.openstack.floating_ip: "{{ item
    | combine({} if 'auth' in item else {'auth': openstack_auth})
    | combine({} if 'cloud' in item else {'cloud': openstack_cloud})
    | combine({} if 'interface' in item else {'interface': openstack_interface})
  }}"

# Splitting creation and destruction by state is required to ensure correct order of operations,
# e.g. ports have to be removed before networks.

- name: Release OpenStack floating ips
  loop: '{{ openstack_floating_ips | default([]) }}'
  when: item.state | default('present') == 'absent'
  jm1.openstack.floating_ip: "{{ item
    | combine({} if 'auth' in item else {'auth': openstack_auth})
    | combine({} if 'cloud' in item else {'cloud': openstack_cloud})
    | combine({} if 'interface' in item else {'interface': openstack_interface})
  }}"

- name: Delete OpenStack ports
  loop: '{{ openstack_ports | default([]) }}'
  when: item.state | default('present') == 'absent'
  openstack.cloud.port: "{{ item
    | combine({} if 'auth' in item else {'auth': openstack_auth})
    | combine({} if 'cloud' in item else {'cloud': openstack_cloud})
    | combine({} if 'interface' in item else {'interface': openstack_interface})
  }}"

- name: Delete OpenStack routers
  loop: '{{ openstack_routers | default([]) }}'
  when: item.state | default('present') == 'present'
  openstack.cloud.router: "{{ item
    | combine({} if 'auth' in item else {'auth': openstack_auth})
    | combine({} if 'cloud' in item else {'cloud': openstack_cloud})
    | combine({} if 'interface' in item else {'interface': openstack_interface})
  }}"

- name: Delete OpenStack subnets
  loop: '{{ openstack_subnets | default([]) }}'
  when: item.state | default('present') == 'absent'
  openstack.cloud.subnet: "{{ item
    | combine({} if 'auth' in item else {'auth': openstack_auth})
    | combine({} if 'cloud' in item else {'cloud': openstack_cloud})
    | combine({} if 'interface' in item else {'interface': openstack_interface})
  }}"

- name: Delete OpenStack networks
  loop: '{{ openstack_networks | default([]) }}'
  when: item.state | default('present') == 'absent'
  openstack.cloud.network: "{{ item
    | combine({} if 'auth' in item else {'auth': openstack_auth})
    | combine({} if 'cloud' in item else {'cloud': openstack_cloud})
    | combine({} if 'interface' in item else {'interface': openstack_interface})
  }}"
